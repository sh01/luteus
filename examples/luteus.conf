# Sample Luteus config file.
#
# Syntax is python3.1, though we don't need most of it here. If you don't
# know the language, you should be able to pick up enough of it from the
# examples to make luteus do what you want.
#
# To get started, copy this file to ~/.luteus/luteus.conf, and edit the
# settings below to fit your needs.

import logging
import os.path

from luteus.util.autojoin import *
from luteus.util.autoline import *
from luteus.util.autoresponder import *

# Set up file logging
ml_basedir = 'log/luteus'
try:
   os.makedirs(ml_basedir)
except EnvironmentError:
   pass

ml_rl = logging.getLogger()

ml_f = logging.Formatter('%(asctime)s %(name)s %(levelname)s %(message)s')
ml_fh20 = logging.handlers.RotatingFileHandler(os.path.join(ml_basedir, 'l20'), maxBytes=1024**2, backupCount=5)
ml_fh20.setLevel(20)
ml_fh20.setFormatter(ml_f)
ml_rl.addHandler(ml_fh20)

# BacklogFormatter
blf = BLFormatter(time_fmt='%d %H:%M:%S', time_color=15, nmcl_color=15,
   ctcp_color=4, utc=False)

# NET1 uplink definition
net1_us = new_user_spec(nicks=(b'Zanaffar',),
   username=b'chimera', realname=b'Luteus test connection')

net1_ul = new_network('NETWORK1', net1_us)
net1_ssls = new_ssl_spec(cert_reqs=CERT_REQUIRED)
net1_ul.add_target('0.0.0.0', 6697, ssl=net1_ssls)

# Pseudo servers
ps = new_pseudo_server((b'127.0.0.1',6667))

# NSN bnc
net1_blfilt = LogFilter()
net1_blfilt.add_filtered_nick(b'StatServ')
net1_blfilt.set_eat_all_ctcp_out(True)
net1_bnc = new_bnc(net1_ul, blf=blf, filter=net1_blfilt)

# NSN utils
## AutoJoiner
net1_aj = AutoJoiner()
net1_aj.attach_nc(net1_ul)
net1_aj.add_channel(b'#luteus-test')

## AutolineSender
net1_al = AutoLineSender()
net1_al.attach_nc(net1_ul)

### Silly autoline example: Ask the server for uptime info on link
net1_al.add_line(b'STATS u')

### Unset i mode on login
net1_al.add_line_maker(mmm_selfmode(b'-i'))

## AutoResponder:
net1_ar = AutoResponder()
net1_ar.attach_nc(net1_ul)

### Add some auto-identify strings
net1_ar.add_autoresponse_by_nick(
   b'NOTICE',
   b'^:NickServ[^ ]+ NOTICE [^ ]+ :This nickname is registered and protected.',
   'NS IDENTIFY {tok}',
   {b'zanaffar': b'password 1',
    b'zanni-2':  b'password 2'}
)

net1_ar.add_autoresponse_by_nick

# User config
user1 = assoc_handler.add_user(b'user1', b'foo') # username, password
user1.add_bnc(net1_bnc)

user2 = assoc_handler.add_user(b'user2', b'bar') # username, password
user1.add_bnc(net1_bnc)
